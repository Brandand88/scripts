#!/usr/bin/env bash
#
# Script to build and install a Raspberry Pi kernel image
#
# Copyright (C) 2018 Nathan Chancellor
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>


# Source our universal functions script and macOS check
source common

# Kernel variable
KERNEL=kernel7

# Message file for Telegram messages
TG_MSG=/tmp/tg-msg.pi-kernel

function build() {
    (
        START="$(date +"%s")"

        {
            echo "\`\`\`"
            echo "Raspberry Pi kernel build starting..."
            echo
            echo "Version $(make kernelversion)"
            echo "\`\`\`"
        } > ${TG_MSG}
        notify "$(cat "${TG_MSG}")"

        rm -rf out

        make O=out bcm2709_defconfig

        if time make O=out "${JOBS_FLAG}" zImage modules dtbs; then
            {
                echo "\`\`\`"
                echo "Raspberry Pi kernel build completed successfully!"
                echo
                echo "Duration: $(format_time "${START}" "$(date +"%s")")"
                echo "\`\`\`"
            } > ${TG_MSG}
        else
            {
                echo "\`\`\`"
                echo "Raspberry Pi kernel build failed!"
                echo
                echo "Duration: $(format_time "${START}" "$(date +"%s")")"
                echo "\`\`\`"
            } > ${TG_MSG}
        fi
        notify "$(cat "${TG_MSG}")"
    ) > /dev/null
}

function install() {
    (
        sudo make O=out modules_install
        sudo cp out/arch/arm/boot/dts/*.dtb /boot/
        sudo cp out/arch/arm/boot/dts/overlays/*.dtb* /boot/overlays/
        sudo cp arch/arm/boot/dts/overlays/README /boot/overlays/
        sudo cp out/arch/arm/boot/zImage /boot/$KERNEL.img
    ) > /dev/null
}

if [[ "$*" =~ "-b" ]]; then
    build
fi

if [[ "$*" =~ "-i" ]]; then
    install
fi
