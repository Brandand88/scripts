# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (C) 2017-2019 Nathan Chancellor
#
# Utility and terminal setup functions


# Source our universal functions script
if [[ -n ${ZSH_NAME} ]]; then
    SCRIPT=${(%):-%x}
elif [[ -n ${BASH} ]]; then
    SCRIPT=${BASH_SOURCE[0]}
else
    echo "Unsupported shell!"
    return 1
fi
source "$(cd "$(dirname "$(readlink -f "${SCRIPT}")")" || return; pwd)/../common"
unset SCRIPT


# Source the machine specific functions
case "$(whoami)@$(uname -n)" in
    "natechancellor@penguin"|"nathan@localhost") LOCATION=pixelbook ;;
    "nathan@archlinux-"*|"nathan@flashbox") LOCATION=server ;;
    "pi@raspberrypi") LOCATION=pi ;;
esac
source "${SCRIPTS_FOLDER}/env/${LOCATION}"


# Universal aliases/functions
function aliases() {
    # tmux alias
    command -v tmux &>/dev/null && alias tmux='tmux -u'

    source "${SCRIPTS_FOLDER}/funcs/deldog"
    source "${SCRIPTS_FOLDER}/funcs/git"
    source "${SCRIPTS_FOLDER}/funcs/transfer"
}


# Try to attach via tmux
function tmxa() {
    command -v tmux &>/dev/null || return
    [[ -z ${TMUX} ]] && tmux new-session -AD -s main
}


# Smart tmux detach
# https://arslan.io/2019/01/07/using-the-ipad-pro-as-my-development-machine/
function tmxd() {
    local COUNT PANES WINS

    command -v tmux &>/dev/null || return
    [[ -z ${TMUX} ]] && builtin exit

    PANES=$(tmux list-panes | wc -l)
    WINS=$(tmux list-windows | wc -l)
    COUNT=$((PANES + WINS - 1))
    if [[ ${COUNT} -eq 1 ]]; then
        tmux detach
    else
        builtin exit
    fi
}


# Add something to the end of PATH if it isn't already there
function add_to_path_post() {
    [[ -d ${1} ]] || return
    echo "${PATH}" | rg --color=never -s -q "${1}" || export PATH="${PATH}:${1}"
}


# Add something to the beginning of PATH if it isn't already there
function add_to_path_pre() {
    [[ -d ${1} ]] || return
    echo "${PATH}" | rg --color=never -s -q "${1}" || export PATH="${1}:${PATH}"
}
# Easy alias
function path_push() { add_to_path_pre "${@}"; }


# Delete the first folder in PATH
function path_pop() {
    export PATH=${PATH#*:}
}


function shell_setup() {
    # Shell specific options
    if [[ -n ${ZSH_NAME} ]]; then
        typeset -gU path
        [[ -n ${terminfo[khome]} ]] && bindkey "${terminfo[khome]}" beginning-of-line
        [[ -n ${terminfo[kend]} ]] && bindkey "${terminfo[kend]}" end-of-line
        TIMEFMT=$'\nreal\t%*E\nuser\t%*U\nsys\t%*S'
        setopt autocd
        echo "$fpath" | rg -q -s --color=never "${HOME}/.zfunctions" || fpath=( "${HOME}/.zfunctions" $fpath ) 
        autoload -U compinit && compinit
    elif [[ -n ${BASH} ]]; then
        shopt -s checkwinsize
    else
        echo "Unsupported shell!"
        return 1
    fi

    # Environment setup
    aliases
    "${LOCATION}"_aliases
    tmxa
    "${LOCATION}"_setup
    GPG_TTY=$(tty); export GPG_TTY
}


# {bash,zsh}rc reload function
function rld() {
    source "${SCRIPTS_FOLDER}/env/common"
    shell_setup
}
# vi: filetype=zsh
