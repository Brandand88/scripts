#!/usr/bin/env zsh

# Create and configure global .gitignore
function global_gitignore() {(
    git config --global core.excludesfile "${HOME}"/.gitignore_global
    curl -LSso "${HOME}"/.gitignore_global https://gist.githubusercontent.com/octocat/9257657/raw/3f9569e65df83a7b328b39a091f0ce9c6efc6429/.gitignore

    # Add my rules
    {
        echo
        echo
        echo "# Personal exclusions #"
        echo "#######################"
        echo "out/"
        echo "*.ko"
        echo "Image.*"
        echo "zImage*"
        echo "dtbo*"
        echo "net/wireguard"
        echo "*.rej"
    } >> "${HOME}"/.gitignore_global
)}

# Grab linux, linux-next, and linux-stable for CBL
# https://www.kernel.org/cloning-linux-from-a-bundle.html
function cbl_linux_repos() {(
    # shellcheck disable=SC2030
    : "${CBL:=${HOME}/cbl}" "${SRC_FOLDER:=${HOME}/src}"

    while (( ${#} )); do
        case ${1} in
            linux) PAIRS=( "torvalds/linux.git:linux" "torvalds/linux.git:${CBL}/linux" "torvalds/linux.git:${CBL}/mirrors/linux" ) ;;
            linux-next) PAIRS=( "next/linux-next.git:linux-next" "next/linux-next.git:${CBL}/linux-next" ) ;;
            linux-stable) PAIRS=( "stable/linux.git:linux-stable" ) ;;
            *) return 1;
        esac
        shift
    done

    cd "${SRC_FOLDER}" || die "wtf"
    for PAIR in "${PAIRS[@]}"; do
        FOLDER=${PAIR#*:}
        URL=${PAIR%:*}
        CB=clone.bundle-${FOLDER##*/}
        [[ -d ${FOLDER} ]] && continue
        [[ ! -f ${CB} ]] && wget -O "${CB}" -c https://git.kernel.org/pub/scm/linux/kernel/git/"${URL}"/clone.bundle
        git clone "${CB}" "${FOLDER}"
        (
            cd "${FOLDER}" || die "${FOLDER} does not exist"
            git remote remove origin
            git remote add origin git://git.kernel.org/pub/scm/linux/kernel/git/"${URL}"
            git remote update origin
            git checkout master
            [[ ${FOLDER} =~ mirrors ]] && git remote add github git@github.com:ClangBuiltLinux/linux.git
        )
    done
    rm -rf 'clone.bundle-*'
)}

# Download other CBL things
function cbl_other_repos() {(
    # shellcheck disable=SC2031
    cd "${CBL:=${HOME}/cbl}"/android || die "wtf"
    [[ -d android-kernel-clang ]] || git clone git@github.com:nathanchance/android-kernel-clang.git
    mkdir -p common
    cd common || die "wtf"
    PATH=${HOME}/usr/bin:${PATH} repo init -u https://android.googlesource.com/kernel/manifest -b common-android-multi
    PATH=${HOME}/usr/bin:${PATH} repo sync
    curl -LSso common/.git/hooks/commit-msg https://android-review.googlesource.com/tools/hooks/commit-msg
    chmod u+x common/.git/hooks/commit-msg

    cd "${CBL}"/git || die "wtf"
    for REPO in boot-utils boot-utils:boot-utils-master continuous-integration:ci dockerimage tc-build; do
        FOLDER=${REPO#*:}
        REPO=${REPO%:*}

        [[ -d ${FOLDER} ]] || git clone git@github.com:ClangBuiltLinux/"${REPO}".git "${FOLDER}"
    done
    for FOLDER in boot-utils ci dockerimage tc-build; do ( cd "${FOLDER}" && hub fork ); done
    [[ -d llvm-kernel-testing ]] || git clone git@github.com:nathanchance/llvm-kernel-testing
    [[ -d yapf ]] || git clone https://github.com/google/yapf

    cd "${CBL}"/mirrors || die "wtf"
    [[ -d llvm ]] || git clone git://github.com/llvm/llvm-project llvm
    cd llvm || die "wtf"
    git remote show -n github || git remote add github git@github.com:ClangBuiltLinux/llvm-project.git

    cd "${CBL}" || die "wtf"
    [[ -d llvm-kernel-testing ]] || git clone git@github.com:nathanchance/llvm-kernel-testing.git
    [[ -d tc-build ]] || git clone -b personal git@github.com:nathanchance/tc-build.git
    [[ -d wsl2 ]] || git clone git@github.com:nathanchance/WSL2-Linux-Kernel wsl2

    cd wsl2 || die "wtf"
    git remote show -n mainline || git remote add -f --tags mainline git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
    git remote show -n next || git remote add -f --tags next git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
    git remote show -n microsoft || git remote add -f --tags microsoft git://github.com/microsoft/WSL2-Linux-Kernel
    git config rerere.enabled true
    git config status.aheadBehind false
)}
# vi: filetype=zsh
