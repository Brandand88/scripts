#!/usr/bin/env bash
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (C) 2018 Nathan Chancellor
#
# Utility and terminal setup functions for my Pixelbook


# Downloads folder
alias dwnld='cd ${HOME}/Downloads'

# Files folder
alias fls='cd ${HOME}/Downloads/Files'


# Fetch this script and reload .bashrc
function rld() {
    curl -o ~/.crosh-functions https://raw.githubusercontent.com/nathanchance/scripts/master/os/crosh
    source ~/.bashrc
}
source <(curl -Ls https://raw.githubusercontent.com/nathanchance/scripts/master/snippets/deldog)


# Neofetch function
function neofetch() {
    echo
    /usr/local/bin/neofetch --distro_shorthand tiny "${@}"
    echo
}


# Update function
function upd() {
    crew update
    crew upgrade
}


# Reinstall function in case Chromebrew blows up...
function install-bin() {
    # Wipe /usr/local and reinstall emerge packages
    [[ "${*}" =~ "-c" || "${*}" =~ "--clean" ]] && sudo dev_install --reinstall -y

    # Install adb/fastboot
    curl -s https://raw.githubusercontent.com/nathanchance/chromeos-adb-fastboot/master/install.sh | bash

    # Install neofetch
    sudo curl -s https://raw.githubusercontent.com/dylanaraps/neofetch/master/neofetch -o /usr/local/bin/neofetch
    sudo chmod a+x /usr/local/bin/neofetch

    # Install chromebrew + jq for deldog function
    curl -Ls git.io/vddgY | bash
    crew install jq
}


# Things to do only on a clean install
function setup() {
    if ! grep -q crosh-functions "${HOME}/.bashrc"; then
        echo "[[ -f \${HOME}/.crosh-functions ]] && source \${HOME}/.crosh-functions" >> "${HOME}/.bashrc"
    fi
    install-bin "${@}"
    rld
}


# Unzip files
function uz() {
    [[ ${#} -lt 1 ]] && { echo; echo "This function takes an argument!"; echo; return; }

    FILE=${1}
    EXTRACT_DIR=${1/.zip}

    mkdir -p "${EXTRACT_DIR}" || { echo; echo "Could not create ${PWD}/${EXTRACT_DIR}!"; echo; return; }
    bsdtar -C "${EXTRACT_DIR}" -x -f "${FILE}"
    cd "${EXTRACT_DIR}" || { echo; echo "${PWD}/${EXTRACT_DIR} doesn't exist!"; echo; return; }
}
