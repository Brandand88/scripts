#!/usr/bin/env bash
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (C) 2017-2018 Nathan Chancellor
#
# Utility and terminal setup functions (usually for .bashrc)


# SOURCE OUR UNIVERSAL FUNCTIONS SCRIPT (DON'T MAC CHECK THOUGH)
source "$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" || return; pwd)/../common" -m

# SOURCE THE MACHINE SPECIFIC FUNCTIONS
source "${SCRIPTS_FOLDER}/os/${HOST}"

function aliases() {
    # tmux alias
    alias tmux='tmux -u'

    # If hub is installed, alias git to it
    if command -v hub > /dev/null 2>&1; then alias git='hub'; fi

    git config --global alias.aa 'add --all'
    git config --global alias.ac 'commit --gpg-sign --all --signoff'
    git config --global alias.ams 'am --gpg-sign --signoff'
    git config --global alias.ap 'apply -3 -v'
    git config --global alias.b 'branch --verbose'
    git config --global alias.bd 'branch --delete --force'
    git config --global alias.bn 'rev-parse --abbrev-ref HEAD'
    git config --global alias.bm 'branch --move'
    git config --global alias.c 'commit --gpg-sign --signoff'
    git config --global alias.ca 'commit --gpg-sign --amend --signoff'
    # SC2016: Expressions don't expand in single quotes, use double quotes for that
    # shellcheck disable=SC2016
    git config --global alias.cad '!git commit --gpg-sign --amend --signoff --date="$(date)"'
    git config --global alias.cb 'rev-parse --abbrev-ref HEAD'
    git config --global alias.cf 'diff --name-only --diff-filter=U'
    git config --global alias.ch 'checkout'
    git config --global alias.cl 'clean -fxd'
    git config --global alias.cp 'cherry-pick --gpg-sign --signoff'
    git config --global alias.cpa 'cherry-pick --abort'
    git config --global alias.cpc 'cherry-pick --continue'
    git config --global alias.cpe 'cherry-pick --edit --signoff'
    git config --global alias.cpq 'cherry-pick --quit'
    git config --global alias.dc 'describe --contains'
    git config --global alias.dfs 'diff --stat'
    git config --global alias.dfss 'diff --shortstat'
    git config --global alias.dh 'diff HEAD'
    git config --global alias.dhc 'reset --hard HEAD^'
    git config --global alias.f 'fetch'
    git config --global alias.fa 'fetch --all'
    git config --global alias.fm 'commit --gpg-sign --file /tmp/mrg-msg'
    git config --global alias.fp 'format-patch'
    git config --global alias.kf 'show -s --format="%h (\"%s\")"'
    git config --global alias.lo 'log --oneline'
    git config --global alias.ma 'merge --abort'
    git config --global alias.mc 'merge --continue'
    git config --global alias.pr 'pull-request'
    git config --global alias.psu 'push --set-upstream'
    # SC2016: Expressions don't expand in single quotes, use double quotes for that
    # shellcheck disable=SC2016
    git config --global alias.ra '!f() { for i in $(git cf); do git rf $i; done }; f'
    git config --global alias.rb 'rebase --gpg-sign'
    git config --global alias.rba 'rebase --abort'
    git config --global alias.rbc 'rebase --continue'
    # SC2016: Expressions don't expand in single quotes, use double quotes for that
    # shellcheck disable=SC2016
    git config --global alias.rf '!bash -c "git reset -q -- ${1} && git checkout -- ${1}"'
    git config --global alias.rh 'reset --hard'
    git config --global alias.rma 'remote add'
    git config --global alias.rmsu 'remote set-url'
    git config --global alias.rmv 'remote -v'
    git config --global alias.rs 'reset --soft'
    git config --global alias.rv 'revert --gpg-sign --signoff'
    git config --global alias.s 'status'
    git config --global alias.shf 'show --format=fuller'
    git config --global alias.shm 'show -s'
    git config --global alias.shmf 'show -s --format=fuller'
    git config --global alias.ss 'status --short --branch'
    git config --global alias.us 'reset HEAD'
}

# Try to attach via tmux
function tmux_attach() {
    if [[ -z ${TMUX} ]]; then
        ID=$(tmux ls | grep -vm1 attached | cut -d: -f1)
        if [[ -z ${ID} ]]; then
            tmux -u new-session
        else
            tmux -u attach-session -t "${ID}"
        fi
    fi
}

# Add something to PATH but only if it isn't already there
function add_to_path_pre() {
    [[ -z $(echo "${PATH}" | ag -s --nocolor "${1}") ]] && export PATH="${1}:${PATH}"
}

function add_to_path_post() {
    [[ -z $(echo "${PATH}" | ag -s --nocolor "${1}") ]] && export PATH="${PATH}:${1}"
}

function bash_setup() {
    aliases
    "${HOST}"_aliases
    tmux_attach
    "${HOST}"_setup
    add_to_path_pre "${SCRIPTS_FOLDER}"
}

# bashrc reload function
function rld() {
    source "${SCRIPTS_FOLDER}/os/common"
    bash_setup
}

# EXKM to RC converter
function exkm2rc {
    sed -e 's/^/   write /' "${1}" > "${2}"
}

function gerrit-push {
    local ROM=${1}
    local PROJECT=${2}

    local URL
    local USER=nathanchance

    case ${ROM} in
        "du")
            URL=gerrit.dirtyunicorns.com
            BRANCH=o8x ;;
        "du-caf")
            URL=gerrit.dirtyunicorns.com
            BRANCH=o8x-caf ;;
        "lineage-15.1")
            URL=review.lineageos.org
            BRANCH=lineage-15.1 ;;
        "omni")
            URL=gerrit.omnirom.org
            BRANCH=android-7.1 ;;
        "subs")
            URL=substratum.review
            if [[ ${PROJECT} = "substratum/interfacer" ]]; then
                BRANCH=n-rootless
            else
                BRANCH=n-mr2
            fi ;;
    esac

    [[ -z ${PROJECT} ]] && PROJECT=$(grep -m 1 "projectname" .git/config | sed 's/\tprojectname = //')

    if [[ -n ${PROJECT} ]]; then
        PROJECT=$(echo "${PROJECT}" | sed 's/DirtyUnicorns\///')
        echo "Executing git push ssh://${USER}@${URL}:29418/${PROJECT} HEAD:refs/for/${BRANCH}"
        git push ssh://${USER}@${URL}:29418/"${PROJECT}" HEAD:refs/for/${BRANCH}
    else
        echo "wtf happened?"
    fi
}


# Function to upload to del.dog
function deldog() {
    RESULT=$(curl -sf --data-binary @"${1:--}" https://del.dog/documents) || {
        echo "ERROR: failed to post document" >&2
        exit 1
    }
    KEY=$(jq -r .key <<< "${RESULT}")
    echo "https://del.dog/raw/${KEY}"
}


# echo signoff
function signoff() {
    echo "Signed-off-by: $(git config --get user.name) <$(git config --get user.email)>"
}
