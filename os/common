#!/usr/bin/env bash
#
# Utility and terminal setup functions (usually for .bashrc)
#
# Copyright (C) 2017 Nathan Chancellor
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>


# SOURCE OUR UNIVERSAL FUNCTIONS SCRIPT (DON'T MAC CHECK THOUGH)
source common -m

# SOURCE THE OS SPECIFIC FUNCTIONS
source ${SCRIPTS_FOLDER}/os/${OS}

function aliases() {
    # tmux alias
    alias tmux='tmux -u'

    # Alias hub to git
    alias git='hub'

    git config --global alias.aa 'add --all'
    git config --global alias.ac 'commit --gpg-sign --all --signoff'
    git config --global alias.am 'am --gpg-sign'
    git config --global alias.b 'branch --verbose'
    git config --global alias.bd 'branch --delete --force'
    git config --global alias.bm 'branch --move'
    git config --global alias.cf 'diff --name-only --diff-filter=U'
    git config --global alias.dc 'describe --contains'
    git config --global alias.dh 'diff HEAD'
    git config --global alias.dhc 'reset --hard HEAD^'
    git config --global alias.f 'fetch'
    git config --global alias.fa 'fetch --all'
    git config --global alias.fm 'commit --gpg-sign --file /tmp/mrg-msg'
    git config --global alias.c 'commit --gpg-sign --signoff'
    git config --global alias.ca 'commit --gpg-sign --amend'
    git config --global alias.ch 'checkout'
    git config --global alias.cp 'cherry-pick --gpg-sign'
    git config --global alias.cpa 'cherry-pick --abort'
    git config --global alias.cpc 'cherry-pick --continue'
    git config --global alias.cpe 'cherry-pick --edit'
    git config --global alias.cpq 'cherry-pick --quit'
    git config --global alias.kf 'show -s --format="%h (\"%s\")"'
    git config --global alias.lo 'log --oneline'
    git config --global alias.m 'merge --gpg-sign --signoff'
    git config --global alias.ma 'merge --abort'
    git config --global alias.mc 'merge --continue'
    git config --global alias.pr 'pull-request'
    git config --global alias.psu 'push --set-upstream'
    git config --global alias.rb 'rebase --gpg-sign'
    git config --global alias.rba 'rebase --abort'
    git config --global alias.rbc 'rebase --continue'
    git config --global alias.rh 'reset --hard'
    git config --global alias.rs 'reset --soft'
    git config --global alias.s 'status'
    git config --global alias.ss 'status --short --branch'
    git config --global alias.us 'reset HEAD'
}

# Try to attach via tmux
function tmux_attach() {
    if [[ -z ${TMUX} ]]; then
        ID=$(tmux ls | grep -vm1 attached | cut -d: -f1)
        if [[ -z ${ID} ]]; then
            tmux -u new-session
        else
            tmux -u attach-session -t ${ID}
        fi
    fi
}

# Add something to PATH but only if it isn't already there
function add_to_path_pre() {
    if [[ ! $(echo ${PATH} | ag -s --nocolor ${1}) ]]; then
        export PATH="${1}:${PATH}"
    fi
}

function add_to_path_post() {
    if [[ ! $(echo ${PATH} | ag -s --nocolor ${1}) ]]; then
        export PATH="${PATH}:${1}"
    fi
}

function bash_setup() {
    aliases
    ${OS}_aliases
    tmux_attach
    ${OS}_prompt
    ${OS}_setup
    add_to_path_pre ${SCRIPTS_FOLDER}
}

# bashrc reload function
function rld() {
    source ${SCRIPTS_FOLDER}/os/common
    bash_setup
}

# EXKM to RC converter
function exkm2rc {
    sed -e 's/^/   write /' ${1} > ${2}
}

function gerrit-push {
    local ROM=${1}
    local PROJECT=${2}

    local URL
    local USER=nathanchance

    case ${1} in
        "du")
            URL=gerrit.dirtyunicorns.com
            BRANCH=o8x ;;
        "du-caf")
            URL=gerrit.dirtyunicorns.com
            BRANCH=o8x-caf ;;
        "omni")
            URL=gerrit.omnirom.org
            BRANCH=android-7.1 ;;
        "subs")
            URL=substratum.review
            if [[ ${PROJECT} = "substratum/interfacer" ]]; then
                BRANCH=n-rootless
            else
                BRANCH=n-mr2
            fi ;;
    esac

    if [[ -z ${PROJECT} ]]; then
        PROJECT=$(grep -m 1 "projectname" .git/config | sed 's/\tprojectname = //')
    fi

    if [[ -n ${PROJECT} ]]; then
        PROJECT=$(echo ${PROJECT} | sed 's/DirtyUnicorns\///')
        echo "Executing git push ssh://${USER}@${URL}:29418/${PROJECT} HEAD:refs/for/${BRANCH}"
        git push ssh://${USER}@${URL}:29418/${PROJECT} HEAD:refs/for/${BRANCH}
    else
        echo "wtf happened?"
    fi
}
