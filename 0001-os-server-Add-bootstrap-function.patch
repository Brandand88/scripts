From d1348e5ad692b4a3cca66f586b6d78bf948c5ef1 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <natechancellor@gmail.com>
Date: Sat, 19 Jan 2019 23:15:27 -0700
Subject: [PATCH] os/server: Add bootstrap function

Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
---
 os/common |   2 +-
 os/server | 171 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 172 insertions(+), 1 deletion(-)

diff --git a/os/common b/os/common
index 204faf8..87dc21c 100755
--- a/os/common
+++ b/os/common
@@ -15,7 +15,7 @@ source "$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" || return; pwd)/.
 case "$(whoami)@$(uname -n)" in
     "chronos@localhost") LOCATION=crosh ;;
     "natechancellor@penguin") LOCATION=crostini ;;
-    "nathan@flashbox") LOCATION=server ;;
+    "nathan@archlinux-ryzen"|"nathan@flashbox") LOCATION=server ;;
     "pi@raspberrypi") LOCATION=pi ;;
 esac
 source "${SCRIPTS_FOLDER}/os/${LOCATION}"
diff --git a/os/server b/os/server
index c30cca8..5aa6db3 100755
--- a/os/server
+++ b/os/server
@@ -7,6 +7,177 @@
 # Utility and terminal setup functions for my build server
 
 
+# Setup server function
+#
+# Assumes the following things have been done:
+#
+# 1. The server has had its OS installed (if using Hetzner)
+#
+#    $ installimage -r yes -l 0 -d sda,sdb -f yes -n archlinux-ryzen
+#
+# 2. My user account has been created
+#
+#    $ useradd -m -G wheel -s /bin/bash nathan
+#    $ passwd
+#    $ passwd nathan
+#
+# 3. sudo is installed and configured
+#
+#    $ pacman -S sudo
+#    $ EDITOR=vim visudo
+#
+#    nathan ALL=(ALL) NOPASSWD:ALL
+#
+# 4. Keys to be installed are available at /tmp/keys
+#
+#    $ ssh-copy-id nathan@<ip>
+#    $ ssh nathan@<ip> mkdir /tmp/keys
+#    $ scp {id_ed25519,*.asc} nathan<ip>:/tmp/keys
+#
+function bootstrap() {(
+    # Grab common functions/variables
+    source <(curl -LSs https://github.com/nathanchance/scripts/raw/master/common) &>/dev/null || return 1
+
+    DOTFILES=${REPO_FOLDER}/dotfiles
+    KEYS=/tmp/keys
+
+    # Check if keys are available for installation
+    [[ ! -d ${KEYS} ]] && die "${KEYS} doesn't exist, create it, and copy keys!"
+
+    # Setup folders that will be used
+    mkdir -p "${CBL_FOLDER}" "${MISC_FOLDER}"/building "${REPO_FOLDER}" "${TC_FOLDER}" || die "Can't create folders, wtf?"
+
+    # Enable multilib
+    sudo sed -i "/\[multilib\]/,/Include/"'s/^#//' /etc/pacman.conf
+
+    # Custom makepkg config
+    sudo sed -i "s/#MAKEFLAGS=\"-j2\"/MAKEFLAGS=\"-j$(nproc --all)\"/g" /etc/makepkg.conf
+    sudo sed -i 's/!ccache/ccache/g' /etc/makepkg.conf
+
+    # Install required binaries
+    sudo pacman -Syyu --noconfirm || die "Error updating packages!"
+    sudo pacman -S --needed --noconfirm aarch64-linux-gnu-gcc \
+                                        base-devel \
+                                        bat \
+                                        ca-certificates \
+                                        clang \
+                                        ccache \
+                                        cmake \
+                                        docker \
+                                        fd \
+                                        htop \
+                                        hugo \
+                                        git \
+                                        jq \
+                                        lld \
+                                        mosh \
+                                        most \
+                                        multilib-devel \
+                                        mutt \
+                                        neofetch \
+                                        ninja \
+                                        openssl \
+                                        ripgrep \
+                                        tmux || die "Error installing packages!"
+
+    # Install hub
+    HUB_VERSION=2.7.1
+    (
+        cd /tmp
+        curl -LO https://github.com/github/hub/releases/download/v${HUB_VERSION}/hub-linux-amd64-${HUB_VERSION}.tgz
+        tar -xf hub-linux-amd64-${HUB_VERSION}.tgz
+        cd hub-linux-amd64-${HUB_VERSION} || die "Downloading or extracting hub failed!"
+        sudo ./install
+    ) || die "Error installing hub!"
+    rm -rf /tmp/hub*
+
+    # Setup keys
+    mv "${KEYS}"/id_ed25519{,.pub} "${HOME}"/.ssh
+    chmod 600 "${HOME}"/.ssh/id_ed25519
+    gpg --import "${KEYS}"/{public*,private*}.asc || die "Error installing gpg keys!"
+    gpg --import-ownertrust "${KEYS}"/ownertrust*.asc || die "Error installing gpg ownertrust!"
+    {
+        echo "default-cache-ttl 3600"
+        echo "max-cache-ttl 86400"
+    } > "${HOME}"/.gnupg/gpg-agent.conf
+    gpg-connect-agent reloadagent /bye
+
+    # Configure git
+    git config --global commit.gpgsign true
+    git config --global core.editor vim
+    git config --global sendemail.smtpEncryption tls
+    git config --global sendemail.smtpServer smtp.gmail.com
+    git config --global sendemail.smtpUser natechancellor@gmail.com
+    git config --global sendemail.smtpServerPort 587
+    git config --global user.name "Nathan Chancellor"
+    git config --global user.email "natechancellor@gmail.com"
+    git config --global user.signingkey 2437CB76E544CB6AB3D9DFD399739260CB6CB716
+
+    # Start Docker
+    sudo gpasswd -a nathan docker
+    sudo systemctl enable --now docker.service
+
+    # Install yay and AUR packages
+    cd "${MISC_FOLDER}"/building || die "wtf?"
+    curl -LSs -o PKGBUILD "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=yay"
+    makepkg --noconfirm -si || die "Error installing yay!"
+    gpg --recv-keys 702353E0F7E48EDB
+    yay -S --needed arm-linux-gnueabi-gcc lineageos-devel || die "Error running yay!"
+
+    # Download repos
+    [[ ! -d ${HOME}/scripts ]] && { git -C "${HOME}" clone git@github.com:nathanchance/scripts || die "Error cloning scripts!"; }
+    for REPO in chromeos-adb-fastboot dotfiles hugo-files; do
+        [[ ! -d ${REPO_FOLDER}/${REPO} ]] && { git -C "${REPO_FOLDER}" clone git@github.com:nathanchance/"${REPO}" || die "Error cloning ${REPO}!"; }
+    done
+    [[ ! -d ${REPO_FOLDER}/sp ]] && { git -C "${REPO_FOLDER}" clone git@github.com:nathanchance/stable-patches sp || die "Error cloning stable-patches!"; }
+    [[ ! -d ${REPO_FOLDER}/git ]] && { git -C "${REPO_FOLDER}" clone git://github.com/git/git || die "Error cloning git!"; }
+
+    # Install dotfiles
+    (
+        cp -v "${DOTFILES}"/common/.git-prompt.sh "${HOME}"
+        bash "${DOTFILES}"/common/global_gitignore.sh
+        bash "${DOTFILES}"/server/bashrc.sh
+        cp -v "${DOTFILES}"/server/.tmux.conf "${HOME}"
+        cp -rv "${DOTFILES}"/common/vim "${HOME}"/.vim
+        mv -v "${HOME}"/.vim/.vimrc "${HOME}"
+        sudo cp -v "${DOTFILES}"/server/motd.sh /etc/profile.d
+    ) || die "Error installing dotfiles"
+
+    # Download toolchains
+    git -C "${TC_FOLDER}" clone --single-branch https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/ aosp-clang
+    git -C "${TC_FOLDER}" clone --single-branch -b pie-dev https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/ aosp-clang-9.0.0_r12
+    git -C "${TC_FOLDER}" clone --single-branch https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/ aosp-gcc-arm64
+    git -C "${TC_FOLDER}" clone --single-branch https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/ aosp-gcc-arm
+
+    # Grab linux, linux-next, and linux-stable for CBL
+    # https://www.kernel.org/cloning-linux-from-a-bundle.html
+    (
+        cd "${HOME}"/cbl || die "wtf?"
+        for COMBO in torvalds/linux.git:linux next/linux-next.git:linux-next stable/linux.git:linux-stable; do
+            FOLDER=${COMBO#*:}
+            URL=${COMBO%:*}
+            wget -c https://git.kernel.org/pub/scm/linux/kernel/git/"${URL}"/clone.bundle
+            git clone clone.bundle "${FOLDER}"
+            (
+                cd "${FOLDER}"
+                git remote remove origin
+                git remote add origin git://git.kernel.org/pub/scm/linux/kernel/git/"${URL}"
+                git fetch origin
+                git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)
+            )
+            rm -rf clone.bundle
+        done
+    )
+
+    # Clone kernel-common
+    git -C "${KERNEL_FOLDER}" clone https://android.googlesource.com/kernel/common kernel-common
+
+    # Clone sonyxperiadev/kernel
+    mkdir -p "${KERNEL_FOLDER}"/sony
+    git -C "${KERNEL_FOLDER}/sony" clone git://github.com/sonyxperiadev/kernel
+) || return 1; }
+
+
 # Build server specific aliases
 function server_aliases() {
     # default Arch ls alias
-- 
2.20.1

