#!/usr/bin/env bash
#
# Merge main DU repos into personal ones
#
# Copyright (C) 2017 Nathan Chancellor
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>


###############
#             #
#  VARIABLES  #
#             #
###############

# SOURCE OUR UNIVERSAL FUNCTIONS SCRIPT AND MAC CHECK
source common

# If SOURCE_FOLDER isn't defined, the script is being run separately
[[ -z ${SOURCE_FOLDER} ]] && SOURCE_FOLDER=${ROM_FOLDER}/du

DU_REPOS="
build
device/huawei/angler
external/skia
frameworks/base
frameworks/native
packages/apps/DUI
packages/apps/DU-Tweaks
system/core
system/extras
system/sepolicy
vendor/du
vendor/huawei"


################
#              #
#  PARAMETERS  #
#              #
################

while [[ $# -ge 1 ]]; do
    case "${1}" in
        "-s"|"--sync")
            SYNC=true ;;
        *)
            report_error "Unknown parameter!" ;;
    esac

    shift
done

################
#              #
# SCRIPT START #
#              #
################

if [[ ${SYNC} = true ]]; then
    cd ${SOURCE_FOLDER}
    repo sync ${JOBS_FLAG} --force-sync -c --no-clone-bundle --no-tags \
              --optimized-fetch --prune
fi

for FOLDER in ${DU_REPOS}; do
    # PRINT TO THE USER WHAT WE ARE DOING
    echo; header "Updating ${FOLDER}"

    # SHIFT TO PROPER FOLDER
    cd ${SOURCE_FOLDER}/${FOLDER}

    # SET PROPER URL
    URL=android_$(echo ${FOLDER} | sed "s/\//_/g")

    # FETCH AND MERGE UPSTREAM
    git pull https://github.com/DirtyUnicorns/${URL} n7x

    if [[ $? -ne 0 ]]; then
        RESULT_STRING+="${FOLDER}: ${RED}FAILED${RST}\n"
        EXIT_NEEDED=true
    else
        RESULT_STRING+="${FOLDER}: ${GRN}SUCCESS${RST}\n"

        git push nathanchance HEAD:n7x
    fi
done

# SHIFT BACK TO THE TOP OF THE REPO
cd ${SOURCE_FOLDER}

# PRINT RESULTS
header "RESULTS"
echo ${RESULT_STRING}

# Signal to rom.sh to exit
[[ ${EXIT_NEEDED} = true ]] && exit 1
